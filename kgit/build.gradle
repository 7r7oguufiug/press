apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

repositories {
  mavenCentral()
}

kotlin {
  targets {
    fromPreset(presets.jvm, "jvm")
    fromPreset(presets.macosX64, "macos") {
      compilations.main {
        cinterops {
          objectivegit {
            defFile "src/nativeInterop/cinterop/objectivegit.def"
            includeDirs "$projectDir/Carthage/Build/Mac/ObjectiveGit.framework/Headers"
          }
        }
      }
    }

    def buildForDevice = project.findProperty("device")?.toBoolean() ?: false
    def iosTarget = (buildForDevice) ? presets.iosArm64 : presets.iosX64
    fromPreset(iosTarget, "ios")
  }

  sourceSets {
    commonMain {
      dependencies {
        implementation deps.stately.concurrency
        implementation deps.kotlinx.serialization
      }
    }
    commonTest {
      dependencies {
        implementation kotlin('test-common')
        implementation kotlin('test-annotations-common')
      }
    }
    jvmMain {
      dependencies {
        implementation "org.eclipse.jgit:org.eclipse.jgit:$versions.jgit"
        implementation "org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:$versions.jgit"
      }
    }
    jvmTest {
      dependencies {
        implementation kotlin('test')
        implementation kotlin('test-junit')
      }
    }
    nativeMain {
      dependsOn(commonMain)
      dependencies {}
    }
    nativeTest { dependsOn(commonTest) }

    macosMain { dependsOn(nativeMain) }
    macosTest { dependsOn(nativeTest) }

    iosMain { dependsOn(nativeMain) }
    iosTest { dependsOn(nativeTest) }

    all {
      languageSettings {
        enableLanguageFeature("InlineClasses")
      }
    }
  }
}

// https://youtrack.jetbrains.com/issue/KT-43073
task kt43073(type: Exec) {
  executable "sh"
  def file1 = "$projectDir/Carthage/Build/Mac/ObjectiveGit.framework/Headers/ObjectiveGit.h"
  def file2 = "$projectDir/Carthage/Build/Mac/ObjectiveGit.framework/Headers/GTStatusDelta.h"
  args "-c", """sed -i "" "s|#import <ObjectiveGit/|#import <|g" $file1 $file2"""
}

task carthageBuild(type: Exec) {
  executable "sh"
  args "-c", "/usr/local/bin/carthage build --cache-builds --project-directory ${projectDir}"
}

task carthageUpdate(type: Exec) {
  executable "sh"
  args "-c", "/usr/local/bin/carthage update --cache-builds --project-directory ${projectDir}"
}

carthageBuild.dependsOn tasks.kt43073
carthageUpdate.dependsOn tasks.kt43073
cinteropObjectivegitMacos.dependsOn tasks.carthageBuild
